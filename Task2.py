# -*- coding: utf-8 -*-
"""spam_Mail

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ifN6EOpNtsaSYLNcvZJUgNTTsh6L0Vu-

Importing the Dependencies
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data collection & Pre-Processing"""

raw_mail_data = pd.read_csv('mail_data.csv')

print(raw_mail_data)

mail_data = raw_mail_data.where((pd.notnull(raw_mail_data)),'')

mail_data.head()

mail_data.shape

"""Label Encoding"""

mail_data.loc[mail_data['Category'] == 'spam','Category'] = 0
mail_data.loc[mail_data['Category'] == 'ham','Category'] = 1

"""spam = 0
ham = 1
"""

x = mail_data['Message']
 y = mail_data['Category']

print(x)

print(y)

"""Splitting The data into training data & test data"""

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=3)

print(x.shape)
print(x_train.shape)
print(x_test.shape)

"""Feature Extraction"""

feature_extraction = TfidfVectorizer(min_df = 1, stop_words='english', lowercase=True) # Changed 'True' to True

x_train_features = feature_extraction.fit_transform(x_train)
x_test_features = feature_extraction.transform(x_test)

y_train = y_train.astype('int')
y_test = y_test.astype('int')

print(x_train)

print(x_train_features)

"""Training the model

Logistic Regression
"""

model = LogisticRegression()

model.fit(x_train_features, y_train)

"""Evaluating the trained model"""

predicion_on_training_data = model.predict(x_train_features)
accuracy_on_training_data = accuracy_score(y_train, predicion_on_training_data)

print('Accuracy on training data :',accuracy_on_training_data)

prediction_on_test_data = model.predict(x_test_features)
accuracy_on_test_data = accuracy_score(y_test, prediction_on_test_data)

print('Accuracy on test data :',accuracy_on_test_data)

"""Building a Predictive System"""

input_mail = ["I've been searching for the right words to thank you for this breather. I promise i wont take your help for granted and will fulfil my promise. You have been wonderful and a blessing at all times."]

input_data_features = feature_extraction.transform(input_mail)

prediction = model.predict(input_data_features)
print(prediction)
if prediction == 1:
  print('Ham mail')
else:
  print('Spam mail')

